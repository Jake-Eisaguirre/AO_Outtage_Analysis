---
title: "anova"
format: html
editor: source
---

```{r}

if (!require(librarian)){
  install.packages("librarian")
  library(librarian)
}

# librarian downloads, if not already downloaded, and reads in needed packages
librarian::shelf(tidyverse, here, janitor, vroom, lubridate, ggsignif)



```



```{r}


# Read the CSV file with vroom
raw_data <- vroom(here("data", "Closein_Planning_Input_Data_091724.csv")) %>%
  clean_names() 

# HNL Ramp
col_select <- raw_data %>% 
  select( date_value_interval_final, station_1, department, outage_count, resource_daily, outage_daily) %>% 
  filter(station_1 == "HNL",
         department == "RAMP")

# outage_daily outage_daily_pt_hours, outage_daily_ft_hours, date_time_interval_final

clean_data <- col_select %>% 
  mutate(date_value_interval_final = mdy(date_value_interval_final)) %>% 
  group_by(station_1, department, date_value_interval_final) %>% 
  mutate(temp_id = cur_group_id()) %>% 
  filter(!duplicated(temp_id)) %>% 
  ungroup() %>% 
  mutate(outage_perc = (outage_daily / resource_daily) * 100,
         weekday = factor(wday(date_value_interval_final, label = T))) %>% 
  group_by(station_1, department, date_value_interval_final) %>% 
  reframe(outage_perc = mean(outage_perc),
          weekday=weekday)


sort(colnames(raw_data))

head(clean_data)




#month_year, month_year_2, month, days_in_month, date_time_interval_final
```




```{r}

anova_result <- aov(outage_perc ~ weekday, data = clean_data)

# Summary of ANOVA
summary(anova_result)

post_hoc <- TukeyHSD(anova_result)
print(post_hoc)

plot(post_hoc)


# Boxplot with significance test
ggplot(clean_data, aes(x = weekday, y = outage_perc)) +
  geom_boxplot() +
  geom_jitter(width = 0.2, alpha = 0.6) +
  labs(title = "Outage Percentage by Weekday for RAMP at HNL", x = "Weekday", y = "Outage Percentage") +
  theme_minimal() +
  geom_signif(comparisons = list(c("Sat", "Tue")),
              map_signif_level = TRUE) +
  geom_hline(yintercept = 24.3, color = "red", linetype = "dashed") 

```

